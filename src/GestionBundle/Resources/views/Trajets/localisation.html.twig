<!DOCTYPE html>
<html>
<head>
    <link href="https://maxcdn.bootstrapcdn.com/bootstrap/3.3.6/css/bootstrap.min.css" rel="stylesheet" type="text/css"/>
    <script src="https://ajax.googleapis.com/ajax/libs/jquery/1.12.4/jquery.min.js" type="text/javascript"></script>
    <script src="https://maxcdn.bootstrapcdn.com/bootstrap/3.3.6/js/bootstrap.min.js" type="text/javascript"></script>
    <script>

        var placeSearch, autocomplete;
        var componentForm = {
            locality: '#{{ form.locality.vars.id }}',
            country:  '#{{ form.country.vars.id }}',
            lat:      "#{{ form.lat.vars.id}}",
            lng:      "#{{ form.lng.vars.id}}"
        };

        function initMap() {
            var myLatLng = {lat: 36.8762039 , lng: 10.2375933 };

            var map = new google.maps.Map(document.getElementById('map'), {
                zoom: 8,
                center: myLatLng
            });

            var marker = new google.maps.Marker({
                position: myLatLng,
                map: map,
                title: 'Hello World!'
            });
        }
        function initAutocomplete() {
            // Create the autocomplete object, restricting the search to geographical
            // location types.
            autocomplete = new google.maps.places.Autocomplete(
                /** @type {!HTMLInputElement} */(document.getElementById('autocomplete')),
                {types: ['geocode']});

            // When the user selects an address from the dropdown, populate the address
            // fields in the form.
            autocomplete.addListener('place_changed', fillInAddress);
        }

        function fillInAddress() {
            // Get the place details from the autocomplete object.
            var place = autocomplete.getPlace();

            for (var component in componentForm) {
                document.getElementById(component).value = '';
                document.getElementById(component).disabled = false;
            }

            // Get each component of the address from the place details
            // and fill the corresponding field on the form.
            for (var i = 0; i < place.address_components.length; i++) {
                var addressType = place.address_components[i].types[0];
                if (componentForm[addressType]) {
                    var val = place.address_components[i][componentForm[addressType]];
                    document.getElementById(addressType).value = val;
                }
            }
        }

        // Bias the autocomplete object to the user's geographical location,
        // as supplied by the browser's 'navigator.geolocation' object.
        function geolocate() {
            if (navigator.geolocation) {
                navigator.geolocation.getCurrentPosition(function(position) {
                    var geolocation = {
                        lat: position.coords.latitude,
                        lng: position.coords.longitude
                    };
                    var circle = new google.maps.Circle({
                        center: geolocation,
                        radius: position.coords.accuracy
                    });
                    autocomplete.setBounds(circle.getBounds());
                });
            }
        }
    </script>
    <div class="container">
        <div class="panel panel-primary">
            <div class="panel-heading">
                <h3 class="panel-title">Address</h3>
            </div>
            <input id="autocomplete" placeholder="Enter your address" onFocus="geolocate()" type="text" class="form-control">
    <div class="well">
        {{ form_start(form, {'attr': {'class': 'form-horizontal'}}) }}

        {{ form_errors(form) }}

        <div class="form-group">
            {{ form_label(form.address, "address", {'label_attr': {'class': 'col-sm-2 control-label'}}) }}
            {{ form_errors(form.address) }}
            <div class="col-sm-10">
                {{ form_widget(form.address, {'attr': {'class': 'form-control'}}) }}
            </div>
        </div>
        <div class="form-group">
            {{ form_label(form.locality, "locality", {'label_attr': {'class': 'col-sm-2 control-label'}}) }}
            {{ form_errors(form.locality) }}
            <div class="col-sm-10">
                {{ form_widget(form.locality, {'attr': {'class': 'form-control'}}) }}
            </div>
        </div>
        <div class="form-group">
            {{ form_label(form.country, "country", {'label_attr': {'class': 'col-sm-2 control-label'}}) }}
            {{ form_errors(form.country) }}
            <div class="col-sm-10">
                {{ form_widget(form.country, {'attr': {'class': 'form-control'}}) }}
            </div>
        </div>
        <div class="form-group">
            {{ form_label(form.lat, "lat", {'label_attr': {'class': 'col-sm-2 control-label'}}) }}
            {{ form_errors(form.lat) }}
            <div class="col-sm-10">
                {{ form_widget(form.lat, {'attr': {'class': 'form-control'}}) }}
            </div>
        </div>
        <div class="form-group">
            {{ form_label(form.lng, "lng", {'label_attr': {'class': 'col-sm-2 control-label'}}) }}
            {{ form_errors(form.lng) }}
            <div class="col-sm-10">
                {{ form_widget(form.lng, {'attr': {'class': 'form-control'}}) }}
            </div>
        </div>








        {{ form_rest(form) }}

        {{ form_end(form) }}
    </div>
        </div>
    </div>
<script src="https://maps.googleapis.com/maps/api/js?key=AIzaSyA4EfSDouWFE0bFohpHnM-L5KzBV8LYBBw&libraries=places&callback=initAutocomplete" async defer></script>
</html>